# Сборка для разработки
# Помни, что папка в контейнере заменяется твоей папкой с компа, поэтому всё, что ты туда скопируешь при билде не будет видно.
# Файлы по типу entrypoint.sh и whait-for-it.sh надо копировать в папку проекта руками.

services:
    # nginx:
    #     image: nginx:stable-alpine
    #     volumes:
    #         - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    #     ports:
    #         - 8000:80
    #     depends_on:
    #         - user_service
    #         - db
    #     networks:
    #         - dev

    db:
        image: postgres
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - ~/Документы/docker/postgres-data/bycicles/:/var/lib/postgresql/data/
        ports:
            - "5432:5432"

    redis:
        image: redis

    web:
        build:
            context: .
            dockerfile: ./Dockerfile
        # entrypoint: ./entrypoint.sh uwsgi --ini uwsgi.ini
        entrypoint: ./entrypoint.sh python manage.py runserver 0.0.0.0:8000
        # entrypoint: tail -f /dev/null
        environment:
            - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
        volumes:
            - ./application/:/code
        ports:
            - "8000:8000"
        depends_on:
            - db

    celery_worker:
        build:
            context: .
            dockerfile: ./Dockerfile
        entrypoint: celery -A core worker --loglevel=info
        environment:
            - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
        depends_on:
            - redis
            - web

    flower:
        image: mher/flower
        ports:
            - "5555:5555"
        environment:
            CELERY_BROKER_URL: ${CELERY_BROKER_URL}
            FLOWER_PORT: 5555
        depends_on:
            - celery_worker
